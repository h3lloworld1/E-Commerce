{"ast":null,"code":"var _jsxFileName = \"D:\\\\scandiweb\\\\src\\\\components\\\\Dropdowns\\\\CurrencySwitcher1.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./CurrenctySwitcher.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CurrencySwitcher1 extends Component {\n  constructor(props) {\n    super(props);\n    this.currencyQuery = `{\n        currencies {\n          label\n          symbol\n        }\n      }`;\n    this.state = {\n      currency: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/\", {\n      body: JSON.stringify({\n        query: this.currencyQuery\n      }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Dnt: \"1\"\n      },\n      method: \"POST\"\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        cartBadgeQty: this.props.itemsArr.reduce((acummulator, object) => {\n          return acummulator + object.quantity;\n        }, 0)\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: this.state.currency.map((curr, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => this.switchCurr(i),\n        className: `${classes.currencies} ${this.currency === i ? classes.active : undefined} `,\n        children: [curr.label, \" \", curr.symbol]\n      }, curr.label, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currency: state.currency\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    switchCurr: val => dispatch({\n      type: \"switchCurr\",\n      curr: val\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencySwitcher1);","map":{"version":3,"sources":["D:/scandiweb/src/components/Dropdowns/CurrencySwitcher1.js"],"names":["Component","connect","classes","CurrencySwitcher1","constructor","props","currencyQuery","state","currency","componentDidMount","fetch","body","JSON","stringify","query","headers","Accept","Dnt","method","then","response","json","data","setState","cartBadgeQty","itemsArr","reduce","acummulator","object","quantity","render","container","map","curr","i","switchCurr","currencies","active","undefined","label","symbol","mapStateToProps","mapDispatchToProps","dispatch","val","type"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,gCAApB;;;AAEA,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;AACxCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAMnBC,aANmB,GAMF;AACnB;AACA;AACA;AACA;AACA,QAXqB;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AAQDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,wBAAD,EAA2B;AAC9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE,KAAKR;AAAd,OAAf,CADwB;AAE9BS,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,GAAG,EAAE;AAHE,OAFqB;AAO9BC,MAAAA,MAAM,EAAE;AAPsB,KAA3B,CAAL,CASGC,IATH,CASSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EATtB,EAUGF,IAVH,CAUSG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAE,KAAKnB,KAAL,CAAWoB,QAAX,CAAoBC,MAApB,CAA2B,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAChE,iBAAOD,WAAW,GAAGC,MAAM,CAACC,QAA5B;AACD,SAFa,EAEX,CAFW;AADF,OAAd;AAKD,KAhBH;AAiBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAE5B,OAAO,CAAC6B,SAAxB;AAAA,gBACG,KAAKxB,KAAL,CAAWC,QAAX,CAAoBwB,GAApB,CAAwB,CAACC,IAAD,EAAOC,CAAP,kBACvB;AACE,QAAA,OAAO,EAAE,MAAM,KAAKC,UAAL,CAAgBD,CAAhB,CADjB;AAEE,QAAA,SAAS,EAAG,GAAEhC,OAAO,CAACkC,UAAW,IAC/B,KAAK5B,QAAL,KAAkB0B,CAAlB,GAAsBhC,OAAO,CAACmC,MAA9B,GAAuCC,SACxC,GAJH;AAAA,mBAOGL,IAAI,CAACM,KAPR,OAOgBN,IAAI,CAACO,MAPrB;AAAA,SAKOP,IAAI,CAACM,KALZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAlDuC;;AAqD1C,MAAME,eAAe,GAAIlC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACC;AADX,GAAP;AAGD,CAJD;;AAMA,MAAMkC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLR,IAAAA,UAAU,EAAGS,GAAD,IAASD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,YAAR;AAAsBZ,MAAAA,IAAI,EAAEW;AAA5B,KAAD;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAe3C,OAAO,CAACwC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CvC,iBAA7C,CAAf","sourcesContent":["import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./CurrenctySwitcher.module.css\";\r\n\r\nclass CurrencySwitcher1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currency: [],\r\n    };\r\n  }\r\n  currencyQuery = `{\r\n        currencies {\r\n          label\r\n          symbol\r\n        }\r\n      }`;\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:4000/\", {\r\n      body: JSON.stringify({ query: this.currencyQuery }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Dnt: \"1\",\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          cartBadgeQty: this.props.itemsArr.reduce((acummulator, object) => {\r\n            return acummulator + object.quantity;\r\n          }, 0),\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container}>\r\n        {this.state.currency.map((curr, i) => (\r\n          <div\r\n            onClick={() => this.switchCurr(i)}\r\n            className={`${classes.currencies} ${\r\n              this.currency === i ? classes.active : undefined\r\n            } `}\r\n            key={curr.label}\r\n          >\r\n            {curr.label} {curr.symbol}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currency: state.currency,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    switchCurr: (val) => dispatch({ type: \"switchCurr\", curr: val }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencySwitcher1);\r\n"]},"metadata":{},"sourceType":"module"}