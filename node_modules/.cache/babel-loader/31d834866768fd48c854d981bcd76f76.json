{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  filter: 0,\n  itemsArr: [],\n  currency: 0\n};\n\nconst Store = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"add\") {\n    return { ...state,\n      itemsArr: [action.obj, ...state.itemsArr]\n    };\n  }\n\n  if (action.type === \"set\") {\n    return { ...state,\n      filter: state.filter = 0\n    };\n  }\n\n  if (action.type === \"set2\") {\n    return { ...state,\n      filter: state.filter = 1\n    };\n  }\n\n  if (action.type === \"set3\") {\n    return { ...state,\n      filter: state.filter = 2\n    };\n  }\n\n  if (action.type === \"switchCurr\") {\n    return { ...state,\n      currency: state.currency = action.curr\n    };\n  } // if (action.type === \"switchCurr1\") {\n  //   return {\n  //     ...state,\n  //     currency: (state.currency = 1),\n  //   };\n  // }\n  // if (action.type === \"switchCurr2\") {\n  //   return {\n  //     ...state,\n  //     currency: (state.currency = 2),\n  //   };\n  // }\n  // if (action.type === \"switchCurr3\") {\n  //   return {\n  //     ...state,\n  //     currency: (state.currency = 3),\n  //   };\n  // }\n  // if (action.type === \"switchCurr4\") {\n  //   return {\n  //     ...state,\n  //     currency: (state.currency = 4),\n  //   };\n  // }\n  // case APPEND_TODO:\n  //  return { // returning a copy of orignal state\n  //   ...state, //copying the original state\n  //   todos: [...state.todos, action.payload] //new todos array\n  //  }\n\n\n  if (action.type === \"remove\") {\n    return {\n      counter: state.counter - 1,\n      itemsArr: state.itemsArr.push(action.obj)\n    };\n  }\n\n  return state;\n};\n\n_c = Store;\nconst store = createStore(Store);\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["D:/scandiweb/src/components/store/index.js"],"names":["createStore","initialState","filter","itemsArr","currency","Store","state","action","type","obj","curr","counter","push","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CADW;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAMA,MAAMC,KAAK,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC9C,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,QAAQ,EAAE,CAACI,MAAM,CAACE,GAAR,EAAa,GAAGH,KAAK,CAACH,QAAtB;AAFL,KAAP;AAID;;AACD,MAAII,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,WAAO,EACL,GAAGF,KADE;AAELJ,MAAAA,MAAM,EAAGI,KAAK,CAACJ,MAAN,GAAe;AAFnB,KAAP;AAID;;AACD,MAAIK,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;AAC1B,WAAO,EACL,GAAGF,KADE;AAELJ,MAAAA,MAAM,EAAGI,KAAK,CAACJ,MAAN,GAAe;AAFnB,KAAP;AAID;;AACD,MAAIK,MAAM,CAACC,IAAP,KAAgB,MAApB,EAA4B;AAC1B,WAAO,EACL,GAAGF,KADE;AAELJ,MAAAA,MAAM,EAAGI,KAAK,CAACJ,MAAN,GAAe;AAFnB,KAAP;AAID;;AAED,MAAIK,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO,EACL,GAAGF,KADE;AAELF,MAAAA,QAAQ,EAAGE,KAAK,CAACF,QAAN,GAAiBG,MAAM,CAACG;AAF9B,KAAP;AAID,GA/B6C,CAgC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAIH,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLG,MAAAA,OAAO,EAAEL,KAAK,CAACK,OAAN,GAAgB,CADpB;AAELR,MAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeS,IAAf,CAAoBL,MAAM,CAACE,GAA3B;AAFL,KAAP;AAID;;AAED,SAAOH,KAAP;AACD,CAtED;;KAAMD,K;AAwEN,MAAMQ,KAAK,GAAGb,WAAW,CAACK,KAAD,CAAzB;AAEA,eAAeQ,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  filter: 0,\r\n  itemsArr: [],\r\n  currency: 0,\r\n};\r\n\r\nconst Store = (state = initialState, action) => {\r\n  if (action.type === \"add\") {\r\n    return {\r\n      ...state,\r\n      itemsArr: [action.obj, ...state.itemsArr],\r\n    };\r\n  }\r\n  if (action.type === \"set\") {\r\n    return {\r\n      ...state,\r\n      filter: (state.filter = 0),\r\n    };\r\n  }\r\n  if (action.type === \"set2\") {\r\n    return {\r\n      ...state,\r\n      filter: (state.filter = 1),\r\n    };\r\n  }\r\n  if (action.type === \"set3\") {\r\n    return {\r\n      ...state,\r\n      filter: (state.filter = 2),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"switchCurr\") {\r\n    return {\r\n      ...state,\r\n      currency: (state.currency = action.curr),\r\n    };\r\n  }\r\n  // if (action.type === \"switchCurr1\") {\r\n  //   return {\r\n  //     ...state,\r\n  //     currency: (state.currency = 1),\r\n  //   };\r\n  // }\r\n  // if (action.type === \"switchCurr2\") {\r\n  //   return {\r\n  //     ...state,\r\n  //     currency: (state.currency = 2),\r\n  //   };\r\n  // }\r\n  // if (action.type === \"switchCurr3\") {\r\n  //   return {\r\n  //     ...state,\r\n  //     currency: (state.currency = 3),\r\n  //   };\r\n  // }\r\n  // if (action.type === \"switchCurr4\") {\r\n  //   return {\r\n  //     ...state,\r\n  //     currency: (state.currency = 4),\r\n  //   };\r\n  // }\r\n  // case APPEND_TODO:\r\n  //  return { // returning a copy of orignal state\r\n  //   ...state, //copying the original state\r\n  //   todos: [...state.todos, action.payload] //new todos array\r\n  //  }\r\n\r\n  if (action.type === \"remove\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      itemsArr: state.itemsArr.push(action.obj),\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(Store);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}