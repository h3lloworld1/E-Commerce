{"ast":null,"code":"var _jsxFileName = \"D:\\\\scandiweb\\\\src\\\\components\\\\Dropdowns\\\\CurrencySwitcher.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./CurrenctySwitcher.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CurrencySwitcher extends Component {\n  constructor(props) {\n    super(props);\n    this.currencyQuery = `{\n        currencies {\n          label\n          symbol\n        }\n      }`;\n\n    this.setCurrencySymbol = val => {\n      this.props.sendValue(val);\n    };\n\n    this.state = {\n      currency: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/\", {\n      body: JSON.stringify({\n        query: this.currencyQuery\n      }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Dnt: \"1\"\n      },\n      method: \"POST\"\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        currency: data.data.currencies\n      });\n      this.setCurrencySymbol(data.data.currencies);\n    });\n  }\n\n  render() {\n    const {\n      currency\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: currency.map((curr, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => this.props.switchCurr(i),\n          className: `${classes.currencies} ${this.props.currency === i ? classes.active : undefined} `,\n          children: [curr.symbol, \" \", curr.label]\n        }, curr.label, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currency: state.currency\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    switchCurr: val => dispatch({\n      type: \"switchCurr\",\n      curr: val\n    }),\n    sendValue: val => dispatch({\n      type: \"symbolValue\",\n      symbol: val\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencySwitcher);","map":{"version":3,"sources":["D:/scandiweb/src/components/Dropdowns/CurrencySwitcher.js"],"names":["Component","connect","classes","CurrencySwitcher","constructor","props","currencyQuery","setCurrencySymbol","val","sendValue","state","currency","componentDidMount","fetch","body","JSON","stringify","query","headers","Accept","Dnt","method","then","response","json","data","setState","currencies","render","container","map","curr","i","switchCurr","active","undefined","symbol","label","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,gCAApB;;;AAEA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACvCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAOnBC,aAPmB,GAOF;AACnB;AACA;AACA;AACA;AACA,QAZqB;;AAAA,SA+BnBC,iBA/BmB,GA+BEC,GAAD,IAAS;AAC3B,WAAKH,KAAL,CAAWI,SAAX,CAAqBD,GAArB;AACD,KAjCkB;;AAEjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AASDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,wBAAD,EAA2B;AAC9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE,KAAKX;AAAd,OAAf,CADwB;AAE9BY,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,GAAG,EAAE;AAHE,OAFqB;AAO9BC,MAAAA,MAAM,EAAE;AAPsB,KAA3B,CAAL,CASGC,IATH,CASSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EATtB,EAUGF,IAVH,CAUSG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAEf,QAAAA,QAAQ,EAAEc,IAAI,CAACA,IAAL,CAAUE;AAAtB,OAAd;AACA,WAAKpB,iBAAL,CAAuBkB,IAAI,CAACA,IAAL,CAAUE,UAAjC;AACD,KAbH;AAcD;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA;AAAF,QAAe,KAAKD,KAA1B;AAEA,wBACE;AAAA,6BACE;AAAK,QAAA,SAAS,EAAER,OAAO,CAAC2B,SAAxB;AAAA,kBACGlB,QAAQ,CAACmB,GAAT,CAAa,CAACC,IAAD,EAAOC,CAAP,kBACZ;AACE,UAAA,OAAO,EAAE,MAAM,KAAK3B,KAAL,CAAW4B,UAAX,CAAsBD,CAAtB,CADjB;AAEE,UAAA,SAAS,EAAG,GAAE9B,OAAO,CAACyB,UAAW,IAC/B,KAAKtB,KAAL,CAAWM,QAAX,KAAwBqB,CAAxB,GAA4B9B,OAAO,CAACgC,MAApC,GAA6CC,SAC9C,GAJH;AAAA,qBAOGJ,IAAI,CAACK,MAPR,OAOiBL,IAAI,CAACM,KAPtB;AAAA,WAKON,IAAI,CAACM,KALZ;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AAxDsC;;AA2DzC,MAAMC,eAAe,GAAI5B,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACC;AADX,GAAP;AAGD,CAJD;;AAMA,MAAM4B,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLP,IAAAA,UAAU,EAAGzB,GAAD,IAASgC,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,YAAR;AAAsBV,MAAAA,IAAI,EAAEvB;AAA5B,KAAD,CADxB;AAELC,IAAAA,SAAS,EAAGD,GAAD,IAASgC,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,aAAR;AAAuBL,MAAAA,MAAM,EAAE5B;AAA/B,KAAD;AAFvB,GAAP;AAID,CALD;;AAOA,eAAeP,OAAO,CAACqC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CpC,gBAA7C,CAAf","sourcesContent":["import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classes from \"./CurrenctySwitcher.module.css\";\r\n\r\nclass CurrencySwitcher extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currency: [],\r\n    };\r\n  }\r\n\r\n  currencyQuery = `{\r\n        currencies {\r\n          label\r\n          symbol\r\n        }\r\n      }`;\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:4000/\", {\r\n      body: JSON.stringify({ query: this.currencyQuery }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Dnt: \"1\",\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ currency: data.data.currencies });\r\n        this.setCurrencySymbol(data.data.currencies);\r\n      });\r\n  }\r\n\r\n  setCurrencySymbol = (val) => {\r\n    this.props.sendValue(val);\r\n  };\r\n\r\n  render() {\r\n    const { currency } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div className={classes.container}>\r\n          {currency.map((curr, i) => (\r\n            <div\r\n              onClick={() => this.props.switchCurr(i)}\r\n              className={`${classes.currencies} ${\r\n                this.props.currency === i ? classes.active : undefined\r\n              } `}\r\n              key={curr.label}\r\n            >\r\n              {curr.symbol} {curr.label}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currency: state.currency,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    switchCurr: (val) => dispatch({ type: \"switchCurr\", curr: val }),\r\n    sendValue: (val) => dispatch({ type: \"symbolValue\", symbol: val }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencySwitcher);\r\n"]},"metadata":{},"sourceType":"module"}