{"ast":null,"code":"var _jsxFileName = \"D:\\\\scandiweb\\\\src\\\\Pages\\\\Cart1.js\";\nimport { Component } from \"react\";\nimport classes from \"./Cart.module.css\";\nimport { connect } from \"react-redux\";\nimport Slider1 from \"../components/test/Slider1\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart1 extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cart__text,\n        children: \"CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), this.props.itemsArr.length !== 0 && this.props.itemsArr.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.left,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.item__brand,\n            children: item.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.item__name,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.item__price,\n            children: [item.prices[this.props.currency].currency.symbol, parseFloat(item.quantity * item.prices[0].amount).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.sizeBtns,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.size__buttons,\n              children: \"XS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.size__buttons,\n              children: \"S\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.size__buttons,\n              children: \"M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.size__buttons,\n              children: \"L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 72\n            }, this), item.checked]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.right,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.quantity__buttons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: classes.plus__minus,\n              onClick: () => this.props.addToCart(item),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.quantity,\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: classes.plus__minus,\n              onClick: () => this.props.removeItem(item),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Slider1, {\n            slides: item.gallery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)), this.props.itemsArr.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cart__empty,\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itemsArr: state.itemsArr,\n    currency: state.currency\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: val => dispatch({\n      type: \"add\",\n      obj: val\n    }),\n    removeItem: val => dispatch({\n      type: \"remove\",\n      obj: val\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart1);","map":{"version":3,"sources":["D:/scandiweb/src/Pages/Cart1.js"],"names":["Component","classes","connect","Slider1","Cart1","render","container","cart__text","props","itemsArr","length","map","item","wrapper","left","item__brand","brand","item__name","name","item__price","prices","currency","symbol","parseFloat","quantity","amount","toFixed","sizeBtns","size__buttons","checked","right","quantity__buttons","plus__minus","addToCart","removeItem","gallery","id","cart__empty","mapStateToProps","state","mapDispatchToProps","dispatch","val","type","obj"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport classes from \"./Cart.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport Slider1 from \"../components/test/Slider1\";\r\n\r\nclass Cart1 extends Component {\r\n  render() {\r\n    return (\r\n      <div className={classes.container}>\r\n        <div className={classes.cart__text}>CART</div>\r\n        {this.props.itemsArr.length !== 0 &&\r\n          this.props.itemsArr.map((item) => (\r\n            <div className={classes.wrapper} key={item.id}>\r\n              <div className={classes.left}>\r\n                <div className={classes.item__brand}>{item.brand}</div>\r\n                <div className={classes.item__name}>{item.name}</div>\r\n                <div className={classes.item__price}>\r\n                  {item.prices[this.props.currency].currency.symbol}\r\n                  {parseFloat(item.quantity * item.prices[0].amount).toFixed(2)}\r\n                </div>\r\n                <div className={classes.sizeBtns}>\r\n                  <button className={classes.size__buttons}>XS</button>\r\n                  <button className={classes.size__buttons}>S</button>\r\n                  <button className={classes.size__buttons}>M</button>\r\n                  <button className={classes.size__buttons}>L</button> <br></br>\r\n                  {item.checked}\r\n                </div>\r\n              </div>\r\n              <div className={classes.right}>\r\n                <div className={classes.quantity__buttons}>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={classes.plus__minus}\r\n                    onClick={() => this.props.addToCart(item)}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <div className={classes.quantity}>{item.quantity}</div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={classes.plus__minus}\r\n                    onClick={() => this.props.removeItem(item)}\r\n                  >\r\n                    -\r\n                  </button>\r\n                </div>\r\n                <Slider1 slides={item.gallery} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        {this.props.itemsArr.length === 0 && (\r\n          <div className={classes.cart__empty}>Your cart is empty</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    itemsArr: state.itemsArr,\r\n    currency: state.currency,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (val) => dispatch({ type: \"add\", obj: val }),\r\n    removeItem: (val) => dispatch({ type: \"remove\", obj: val }),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart1);\r\n"]},"metadata":{},"sourceType":"module"}