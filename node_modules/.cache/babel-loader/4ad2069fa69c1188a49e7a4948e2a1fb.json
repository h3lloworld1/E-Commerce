{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  filter: 0,\n  itemsArr: [],\n  currency: 0,\n  quantity: 0\n};\n\nconst Store = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"add\") {\n    return { ...state,\n      itemsArr: [action.obj, ...state.itemsArr]\n    };\n  }\n\n  console.log(state.itemsArr);\n\n  if (action.type === \"set\") {\n    return { ...state,\n      filter: state.filter = action.filterState\n    };\n  }\n\n  if (action.type === \"switchCurr\") {\n    return { ...state,\n      currency: state.currency = action.curr\n    };\n  } // case APPEND_TODO:\n  //  return { // returning a copy of orignal state\n  //   ...state, //copying the original state\n  //   todos: [...state.todos, action.payload] //new todos array\n  //  }\n\n\n  if (action.type === \"remove\") {\n    return {\n      counter: state.counter - 1,\n      itemsArr: state.itemsArr.push(action.obj)\n    };\n  }\n\n  return state;\n};\n\n_c = Store;\nconst store = createStore(Store);\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["D:/scandiweb/src/components/store/index.js"],"names":["createStore","initialState","filter","itemsArr","currency","quantity","Store","state","action","type","obj","console","log","filterState","curr","counter","push","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CADW;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,QAAQ,EAAE,CAHS;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;;AAOA,MAAMC,KAAK,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC9C,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,WAAO,EACL,GAAGF,KADE;AAELJ,MAAAA,QAAQ,EAAE,CAACK,MAAM,CAACE,GAAR,EAAa,GAAGH,KAAK,CAACJ,QAAtB;AAFL,KAAP;AAID;;AACDQ,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACJ,QAAlB;;AAEA,MAAIK,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,WAAO,EACL,GAAGF,KADE;AAELL,MAAAA,MAAM,EAAGK,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACK;AAF1B,KAAP;AAID;;AAED,MAAIL,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,QAAQ,EAAGG,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACM;AAF9B,KAAP;AAID,GArB6C,CAuB9C;AACA;AACA;AACA;AACA;;;AAEA,MAAIN,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLM,MAAAA,OAAO,EAAER,KAAK,CAACQ,OAAN,GAAgB,CADpB;AAELZ,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAea,IAAf,CAAoBR,MAAM,CAACE,GAA3B;AAFL,KAAP;AAID;;AAED,SAAOH,KAAP;AACD,CArCD;;KAAMD,K;AAuCN,MAAMW,KAAK,GAAGjB,WAAW,CAACM,KAAD,CAAzB;AAEA,eAAeW,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  filter: 0,\r\n  itemsArr: [],\r\n  currency: 0,\r\n  quantity: 0,\r\n};\r\n\r\nconst Store = (state = initialState, action) => {\r\n  if (action.type === \"add\") {\r\n    return {\r\n      ...state,\r\n      itemsArr: [action.obj, ...state.itemsArr],\r\n    };\r\n  }\r\n  console.log(state.itemsArr);\r\n\r\n  if (action.type === \"set\") {\r\n    return {\r\n      ...state,\r\n      filter: (state.filter = action.filterState),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"switchCurr\") {\r\n    return {\r\n      ...state,\r\n      currency: (state.currency = action.curr),\r\n    };\r\n  }\r\n\r\n  // case APPEND_TODO:\r\n  //  return { // returning a copy of orignal state\r\n  //   ...state, //copying the original state\r\n  //   todos: [...state.todos, action.payload] //new todos array\r\n  //  }\r\n\r\n  if (action.type === \"remove\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      itemsArr: state.itemsArr.push(action.obj),\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(Store);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}