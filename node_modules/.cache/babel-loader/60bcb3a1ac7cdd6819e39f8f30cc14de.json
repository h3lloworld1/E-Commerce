{"ast":null,"code":"var _jsxFileName = \"D:\\\\scandiweb\\\\src\\\\components\\\\Dropdowns\\\\CartDropdown1.js\";\nimport { Component } from \"react\";\nimport classes from \"./CartDropdown.module.css\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CartDropdown1 extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemQuantity: 0\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.itemsArr !== this.props.itemsArr) {\n      this.setState({\n        itemQuantity: this.props.itemsArr.reduce((acummulator, object) => {\n          return acummulator + object.quantity;\n        }, 0)\n      });\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div className={classes.container}>\n      //   <div className={classes.bag}>\n      //     My Bag,\n      //     <span style={{ marginLeft: \"10px\" }} className={classes.items}>\n      //       {this.state.itemQuantity}\n      //     </span>\n      //   </div>\n      //   {this.props.itemsArr.map((item, i) => (\n      //     <div className={classes.wrapper} key={i}>\n      //       <div className={classes.left__menu}>\n      //         <div className={classes.item__name}>{item.brand}</div>\n      //         <div className={classes.smth}>{item.name}</div>\n      //         <div className={classes.item__price}>\n      //           {item.prices[this.props.currency].currency.symbol}\n      //           {parseFloat(\n      //             item.quantity * item.prices[this.props.currency].amount\n      //           ).toFixed(2)}\n      //         </div>\n      //         <div className={classes.size__buttons}>\n      //           <button className={classes.btn__size}>XS</button>\n      //           <button className={classes.btn__size}>S</button>\n      //           <button className={classes.btn__size}>M</button>\n      //           <button className={classes.btn__size}>L</button>\n      //         </div>\n      //       </div>\n      //       <div className={classes.right__menu}>\n      //         <div className={classes.quantiti__buttons}>\n      //           <button\n      //             type=\"submit\"\n      //             className={classes.btn__plus__minus}\n      //             onClick={() => this.props.addToCart(item)}\n      //           >\n      //             +\n      //           </button>\n      //           <div className={classes.quantity}>{item.quantity}</div>\n      //           <button\n      //             type=\"submit\"\n      //             className={classes.btn__plus__minus}\n      //             onClick={() => this.props.removeItem(item)}\n      //           >\n      //             -\n      //           </button>\n      //         </div>\n      //         <img className={classes.cart__img} src={item.gallery[0]} />\n      //       </div>\n      //     </div>\n      //   ))}\n      //   <div className={classes.total__container}>\n      //     <div className={classes.totalTxt}>Total</div>\n      //     <div className={classes.totalAmount}>10</div>\n      //   </div>\n      //   <NavLink to=\"/mycart\" className={classes.view__cart}>\n      //     VIEW CART\n      //   </NavLink>\n      //   <p className={classes.checkout}>CHECK OUT</p>\n      // </div>\n      _jsxDEV(\"h1\", {\n        children: \"hi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currency: state.currency,\n    itemsArr: state.itemsArr\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: val => dispatch({\n      type: \"add\",\n      obj: val\n    }),\n    removeItem: val => dispatch({\n      type: \"remove\",\n      obj: val\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartDropdown1);","map":{"version":3,"sources":["D:/scandiweb/src/components/Dropdowns/CartDropdown1.js"],"names":["Component","classes","connect","NavLink","CartDropdown1","constructor","props","state","itemQuantity","componentDidUpdate","prevProps","itemsArr","setState","reduce","acummulator","object","quantity","render","mapStateToProps","currency","mapDispatchToProps","dispatch","addToCart","val","type","obj","removeItem"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACpCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACC,QAAV,KAAuB,KAAKL,KAAL,CAAWK,QAAtC,EAAgD;AAC9C,WAAKC,QAAL,CAAc;AACZJ,QAAAA,YAAY,EAAE,KAAKF,KAAL,CAAWK,QAAX,CAAoBE,MAApB,CAA2B,CAACC,WAAD,EAAcC,MAAd,KAAyB;AAChE,iBAAOD,WAAW,GAAGC,MAAM,CAACC,QAA5B;AACD,SAFa,EAEX,CAFW;AADF,OAAd;AAKD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAzDF;AA2DD;;AA9EmC;;AAiFtC,MAAMC,eAAe,GAAIX,KAAD,IAAW;AACjC,SAAO;AACLY,IAAAA,QAAQ,EAAEZ,KAAK,CAACY,QADX;AAELR,IAAAA,QAAQ,EAAEJ,KAAK,CAACI;AAFX,GAAP;AAID,CALD;;AAOA,MAAMS,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,SAAS,EAAGC,GAAD,IAASF,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,GAAG,EAAEF;AAApB,KAAD,CADvB;AAELG,IAAAA,UAAU,EAAGH,GAAD,IAASF,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,GAAG,EAAEF;AAAvB,KAAD;AAFxB,GAAP;AAID,CALD;;AAOA,eAAerB,OAAO,CAACgB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ChB,aAA7C,CAAf","sourcesContent":["import { Component } from \"react\";\r\nimport classes from \"./CartDropdown.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass CartDropdown1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemQuantity: 0,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.itemsArr !== this.props.itemsArr) {\r\n      this.setState({\r\n        itemQuantity: this.props.itemsArr.reduce((acummulator, object) => {\r\n          return acummulator + object.quantity;\r\n        }, 0),\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <div className={classes.container}>\r\n      //   <div className={classes.bag}>\r\n      //     My Bag,\r\n      //     <span style={{ marginLeft: \"10px\" }} className={classes.items}>\r\n      //       {this.state.itemQuantity}\r\n      //     </span>\r\n      //   </div>\r\n      //   {this.props.itemsArr.map((item, i) => (\r\n      //     <div className={classes.wrapper} key={i}>\r\n      //       <div className={classes.left__menu}>\r\n      //         <div className={classes.item__name}>{item.brand}</div>\r\n      //         <div className={classes.smth}>{item.name}</div>\r\n      //         <div className={classes.item__price}>\r\n      //           {item.prices[this.props.currency].currency.symbol}\r\n      //           {parseFloat(\r\n      //             item.quantity * item.prices[this.props.currency].amount\r\n      //           ).toFixed(2)}\r\n      //         </div>\r\n      //         <div className={classes.size__buttons}>\r\n      //           <button className={classes.btn__size}>XS</button>\r\n      //           <button className={classes.btn__size}>S</button>\r\n      //           <button className={classes.btn__size}>M</button>\r\n      //           <button className={classes.btn__size}>L</button>\r\n      //         </div>\r\n      //       </div>\r\n      //       <div className={classes.right__menu}>\r\n      //         <div className={classes.quantiti__buttons}>\r\n      //           <button\r\n      //             type=\"submit\"\r\n      //             className={classes.btn__plus__minus}\r\n      //             onClick={() => this.props.addToCart(item)}\r\n      //           >\r\n      //             +\r\n      //           </button>\r\n      //           <div className={classes.quantity}>{item.quantity}</div>\r\n      //           <button\r\n      //             type=\"submit\"\r\n      //             className={classes.btn__plus__minus}\r\n      //             onClick={() => this.props.removeItem(item)}\r\n      //           >\r\n      //             -\r\n      //           </button>\r\n      //         </div>\r\n      //         <img className={classes.cart__img} src={item.gallery[0]} />\r\n      //       </div>\r\n      //     </div>\r\n      //   ))}\r\n      //   <div className={classes.total__container}>\r\n      //     <div className={classes.totalTxt}>Total</div>\r\n      //     <div className={classes.totalAmount}>10</div>\r\n      //   </div>\r\n      //   <NavLink to=\"/mycart\" className={classes.view__cart}>\r\n      //     VIEW CART\r\n      //   </NavLink>\r\n      //   <p className={classes.checkout}>CHECK OUT</p>\r\n      // </div>\r\n      <h1>hi</h1>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currency: state.currency,\r\n    itemsArr: state.itemsArr,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (val) => dispatch({ type: \"add\", obj: val }),\r\n    removeItem: (val) => dispatch({ type: \"remove\", obj: val }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartDropdown1);\r\n"]},"metadata":{},"sourceType":"module"}