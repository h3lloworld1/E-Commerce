{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  filter: 0,\n  itemsArr: [],\n  currency: 0,\n  total: 0\n};\n\nconst Store = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"add\") {\n    const updateTotalAmount = state.total + action;\n\n    if (!action.obj.quantity) {\n      action.obj.quantity = 1;\n    }\n\n    if (state.itemsArr.length === 0) {\n      return { ...state,\n        itemsArr: [action.obj, ...state.itemsArr]\n      };\n    }\n\n    const temp = state.itemsArr.findIndex(x => x.id === action.obj.id);\n\n    if (temp >= 0) {\n      state.itemsArr[temp].quantity++;\n      return { ...state,\n        itemsArr: [...state.itemsArr]\n      };\n    } else {\n      return { ...state,\n        itemsArr: [action.obj, ...state.itemsArr]\n      };\n    }\n  }\n\n  if (action.type === \"remove\") {\n    const temp = state.itemsArr.findIndex(x => x.id === action.obj.id);\n\n    if (action.obj.quantity < 2) {\n      state.itemsArr[temp].quantity = 0;\n      return { ...state,\n        itemsArr: state.itemsArr.filter(item => item.quantity !== 0)\n      };\n    }\n\n    if (temp >= 0) {\n      state.itemsArr[temp].quantity--;\n      return { ...state,\n        itemsArr: [...state.itemsArr]\n      };\n    }\n  }\n\n  if (action.type === \"set\") {\n    return { ...state,\n      filter: state.filter = action.filterState\n    };\n  }\n\n  if (action.type === \"switchCurr\") {\n    return { ...state,\n      currency: state.currency = action.curr\n    };\n  }\n\n  if (action.type === \"remove\") {\n    return {\n      counter: state.counter - 1,\n      itemsArr: state.itemsArr.push(action.obj)\n    };\n  }\n\n  return state;\n};\n\n_c = Store;\nconst store = createStore(Store);\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["D:/scandiweb/src/components/Store/index.js"],"names":["createStore","initialState","filter","itemsArr","currency","total","Store","state","action","type","updateTotalAmount","obj","quantity","length","temp","findIndex","x","id","item","filterState","curr","counter","push","store"],"mappings":"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","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  filter: 0,\r\n  itemsArr: [],\r\n  currency: 0,\r\n  total: 0,\r\n};\r\n\r\nconst Store = (state = initialState, action) => {\r\n  if (action.type === \"add\") {\r\n    const updateTotalAmount = state.total + action;\r\n    if (!action.obj.quantity) {\r\n      action.obj.quantity = 1;\r\n    }\r\n\r\n    if (state.itemsArr.length === 0) {\r\n      return {\r\n        ...state,\r\n        itemsArr: [action.obj, ...state.itemsArr],\r\n      };\r\n    }\r\n\r\n    const temp = state.itemsArr.findIndex((x) => x.id === action.obj.id);\r\n    if (temp >= 0) {\r\n      state.itemsArr[temp].quantity++;\r\n      return {\r\n        ...state,\r\n        itemsArr: [...state.itemsArr],\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        itemsArr: [action.obj, ...state.itemsArr],\r\n      };\r\n    }\r\n  }\r\n\r\n  if (action.type === \"remove\") {\r\n    const temp = state.itemsArr.findIndex((x) => x.id === action.obj.id);\r\n    if (action.obj.quantity < 2) {\r\n      state.itemsArr[temp].quantity = 0;\r\n\r\n      return {\r\n        ...state,\r\n        itemsArr: state.itemsArr.filter((item) => item.quantity !== 0),\r\n      };\r\n    }\r\n\r\n    if (temp >= 0) {\r\n      state.itemsArr[temp].quantity--;\r\n      return {\r\n        ...state,\r\n        itemsArr: [...state.itemsArr],\r\n      };\r\n    }\r\n  }\r\n\r\n  if (action.type === \"set\") {\r\n    return {\r\n      ...state,\r\n      filter: (state.filter = action.filterState),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"switchCurr\") {\r\n    return {\r\n      ...state,\r\n      currency: (state.currency = action.curr),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"remove\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      itemsArr: state.itemsArr.push(action.obj),\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(Store);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}