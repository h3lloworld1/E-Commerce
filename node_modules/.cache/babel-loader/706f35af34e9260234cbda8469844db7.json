{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  itemsArr: [{\n    name: \"giorgi\"\n  }, 2, 3],\n  showCounter: true\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"add\") {\n    console.log(1, typeof state.counter);\n    return {\n      counter: state.counter + 1,\n      itemsArr: state.itemsArr.push(action.obj)\n    };\n  }\n\n  if (action.type === \"add\") {\n    return { // returning a copy of orignal state\n      ...state,\n      //spreading the original state\n      todos: [action.payload, ...state.todos] // new todos array\n\n    };\n  } // case APPEND_TODO:\n  //  return { // returning a copy of orignal state\n  //   ...state, //copying the original state\n  //   todos: [...state.todos, action.payload] //new todos array\n  //  }\n\n\n  if (action.type === \"remove\") {\n    console.log(action.obj);\n    return {\n      counter: state.counter - 1,\n      itemsArr: state.itemsArr.push(action.obj)\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["D:/scandiweb/src/components/store/index.js"],"names":["createStore","initialState","counter","itemsArr","name","showCounter","counterReducer","state","action","type","console","log","push","obj","todos","payload","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,QAAQ,EAAE,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,EAAqB,CAArB,EAAwB,CAAxB,CAFS;AAGnBC,EAAAA,WAAW,EAAE;AAHM,CAArB;;AAMA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ,EAAe,OAAOJ,KAAK,CAACL,OAA5B;AACA,WAAO;AACLA,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;AAELC,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeS,IAAf,CAAoBJ,MAAM,CAACK,GAA3B;AAFL,KAAP;AAID;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,WAAO,EACL;AACA,SAAGF,KAFE;AAEK;AACVO,MAAAA,KAAK,EAAE,CAACN,MAAM,CAACO,OAAR,EAAiB,GAAGR,KAAK,CAACO,KAA1B,CAHF,CAGoC;;AAHpC,KAAP;AAKD,GAdsD,CAgBvD;AACA;AACA;AACA;AACA;;;AAEA,MAAIN,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACK,GAAnB;AAEA,WAAO;AACLX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;AAELC,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeS,IAAf,CAAoBJ,MAAM,CAACK,GAA3B;AAFL,KAAP;AAID;;AAED,SAAON,KAAP;AACD,CAhCD;;AAkCA,MAAMS,KAAK,GAAGhB,WAAW,CAACM,cAAD,CAAzB;AAEA,eAAeU,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  counter: 0,\r\n  itemsArr: [{ name: \"giorgi\" }, 2, 3],\r\n  showCounter: true,\r\n};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"add\") {\r\n    console.log(1, typeof state.counter);\r\n    return {\r\n      counter: state.counter + 1,\r\n      itemsArr: state.itemsArr.push(action.obj),\r\n    };\r\n  }\r\n  if (action.type === \"add\") {\r\n    return {\r\n      // returning a copy of orignal state\r\n      ...state, //spreading the original state\r\n      todos: [action.payload, ...state.todos], // new todos array\r\n    };\r\n  }\r\n\r\n  // case APPEND_TODO:\r\n  //  return { // returning a copy of orignal state\r\n  //   ...state, //copying the original state\r\n  //   todos: [...state.todos, action.payload] //new todos array\r\n  //  }\r\n\r\n  if (action.type === \"remove\") {\r\n    console.log(action.obj);\r\n\r\n    return {\r\n      counter: state.counter - 1,\r\n      itemsArr: state.itemsArr.push(action.obj),\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}