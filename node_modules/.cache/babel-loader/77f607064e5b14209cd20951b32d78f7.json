{"ast":null,"code":"var _jsxFileName = \"D:\\\\scandiweb\\\\src\\\\components\\\\Products & Category\\\\Products.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Product from \"./Product\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Products extends Component {\n  constructor() {\n    super();\n    this.productsQuerry = `\n{\n  categories {\n    name\n    products {\n      name\n      id\n      inStock\n      gallery\n      description\n      category\n      attributes {\n        id\n        name\n        type\n        items {\n          displayValue\n          value\n          id\n        }\n      }\n      prices {\n        currency {\n          label\n          symbol\n        }\n        amount\n      }\n      brand\n    }\n  }\n}\n`;\n    this.state = {\n      productList: []\n    };\n  }\n\n  fetchData() {\n    fetch(\"http://localhost:4000/\", {\n      body: JSON.stringify({\n        query: this.productsQuerry\n      }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Dnt: \"1\"\n      },\n      method: \"POST\"\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        productList: data.data.categories[this.props.filter].products\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.filter !== this.props.filter) {\n      this.fetchData();\n    }\n  }\n\n  render() {\n    const {\n      productList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: productList.map(item => /*#__PURE__*/_jsxDEV(Product, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    filter: state.filter\n  };\n};\n\nexport default connect(mapStateToProps)(Products);","map":{"version":3,"sources":["D:/scandiweb/src/components/Products & Category/Products.js"],"names":["Component","connect","Product","Products","constructor","productsQuerry","state","productList","fetchData","fetch","body","JSON","stringify","query","headers","Accept","Dnt","method","then","response","json","data","setState","categories","props","filter","products","componentDidMount","componentDidUpdate","prevProps","render","map","item","id","mapStateToProps"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC/BI,EAAAA,WAAW,GAAG;AACZ;AADY,SAOdC,cAPc,GAOI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvCgB;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAoCDC,EAAAA,SAAS,GAAG;AACVC,IAAAA,KAAK,CAAC,wBAAD,EAA2B;AAC9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAE,KAAKR;AAAd,OAAf,CADwB;AAE9BS,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,GAAG,EAAE;AAHE,OAFqB;AAO9BC,MAAAA,MAAM,EAAE;AAPsB,KAA3B,CAAL,CASGC,IATH,CASSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EATtB,EAUGF,IAVH,CAUSG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AACZf,QAAAA,WAAW,EAAEc,IAAI,CAACA,IAAL,CAAUE,UAAV,CAAqB,KAAKC,KAAL,CAAWC,MAAhC,EAAwCC;AADzC,OAAd;AAGD,KAdH;AAeD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKnB,SAAL;AACD;;AAEDoB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACJ,MAAV,KAAqB,KAAKD,KAAL,CAAWC,MAApC,EAA4C;AAC1C,WAAKjB,SAAL;AACD;AACF;;AAEDsB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA;AAAF,QAAkB,KAAKD,KAA7B;AAEA,wBACE;AAAA,6BACE;AAAA,kBACGC,WAAW,CAACwB,GAAZ,CAAiBC,IAAD,iBACf,QAAC,OAAD;AAAS,UAAA,IAAI,EAAEA;AAAf,WAA0BA,IAAI,CAACC,EAA/B;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAlF8B;;AAqFjC,MAAMC,eAAe,GAAI5B,KAAD,IAAW;AACjC,SAAO;AACLmB,IAAAA,MAAM,EAAEnB,KAAK,CAACmB;AADT,GAAP;AAGD,CAJD;;AAMA,eAAexB,OAAO,CAACiC,eAAD,CAAP,CAAyB/B,QAAzB,CAAf","sourcesContent":["import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Product from \"./Product\";\r\n\r\nclass Products extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      productList: [],\r\n    };\r\n  }\r\n\r\n  productsQuerry = `\r\n{\r\n  categories {\r\n    name\r\n    products {\r\n      name\r\n      id\r\n      inStock\r\n      gallery\r\n      description\r\n      category\r\n      attributes {\r\n        id\r\n        name\r\n        type\r\n        items {\r\n          displayValue\r\n          value\r\n          id\r\n        }\r\n      }\r\n      prices {\r\n        currency {\r\n          label\r\n          symbol\r\n        }\r\n        amount\r\n      }\r\n      brand\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n  fetchData() {\r\n    fetch(\"http://localhost:4000/\", {\r\n      body: JSON.stringify({ query: this.productsQuerry }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Dnt: \"1\",\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          productList: data.data.categories[this.props.filter].products,\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.filter !== this.props.filter) {\r\n      this.fetchData();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { productList } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          {productList.map((item) => (\r\n            <Product item={item} key={item.id} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filter: state.filter,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Products);\r\n"]},"metadata":{},"sourceType":"module"}