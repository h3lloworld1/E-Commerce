{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  filter: 0,\n  itemsArr: [],\n  currency: 0\n};\n\nconst Store = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"add\") {\n    if (!action.obj.quantity) {\n      action.obj.quantity = 1;\n    }\n\n    if (state.itemsArr.length === 0) {\n      return { ...state,\n        itemsArr: [action.obj, ...state.itemsArr]\n      };\n    }\n\n    console.log(action.obj.quantity);\n    console.log(state.itemsArr.length);\n    const temp = state.itemsArr.findIndex(x => x.id === action.obj.id);\n\n    if (temp >= 0) {\n      state.itemsArr[temp].quantity++;\n      return { ...state,\n        itemsArr: [...state.itemsArr]\n      };\n    } else {\n      return { ...state,\n        itemsArr: [action.obj, ...state.itemsArr]\n      };\n    }\n  }\n\n  if (action.type === \"remove\") {\n    if (action.obj.quantity <= 1) {\n      return { ...state,\n        itemsArr: []\n      };\n    }\n\n    if (state.itemsArr.length === 0) {\n      return { ...state,\n        itemsArr: [action.obj, ...state.itemsArr]\n      };\n    }\n\n    console.log(action.obj.quantity);\n    console.log(state.itemsArr.length);\n    const temp = state.itemsArr.findIndex(x => x.id === action.obj.id);\n\n    if (temp >= 0) {\n      state.itemsArr[temp].quantity--;\n      return { ...state,\n        itemsArr: [...state.itemsArr]\n      };\n    } else {\n      return { ...state,\n        itemsArr: [action.obj, ...state.itemsArr]\n      };\n    }\n  } // if (action.type === \"remove\") {\n  //   return {\n  //     // returning a copy of orignal state\n  //     ...state, //copying the original state\n  //     itemsArr: state.itemsArr.filter((e) => e.id !== action.payload),\n  //   };\n  // }\n\n\n  if (action.type === \"set\") {\n    return { ...state,\n      filter: state.filter = action.filterState\n    };\n  }\n\n  if (action.type === \"switchCurr\") {\n    return { ...state,\n      currency: state.currency = action.curr\n    };\n  } // case APPEND_TODO:\n  //  return { // returning a copy of orignal state\n  //   ...state, //copying the original state\n  //   todos: [...state.todos, action.payload] //new todos array\n  //  }\n\n\n  if (action.type === \"remove\") {\n    return {\n      counter: state.counter - 1,\n      itemsArr: state.itemsArr.push(action.obj)\n    };\n  }\n\n  return state;\n};\n\n_c = Store;\nconst store = createStore(Store);\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["D:/scandiweb/src/components/store/index.js"],"names":["createStore","initialState","filter","itemsArr","currency","Store","state","action","type","obj","quantity","length","console","log","temp","findIndex","x","id","filterState","curr","counter","push","store"],"mappings":"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","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  filter: 0,\r\n  itemsArr: [],\r\n  currency: 0,\r\n};\r\n\r\nconst Store = (state = initialState, action) => {\r\n  if (action.type === \"add\") {\r\n    if (!action.obj.quantity) {\r\n      action.obj.quantity = 1;\r\n    }\r\n    if (state.itemsArr.length === 0) {\r\n      return {\r\n        ...state,\r\n        itemsArr: [action.obj, ...state.itemsArr],\r\n      };\r\n    }\r\n    console.log(action.obj.quantity);\r\n    console.log(state.itemsArr.length);\r\n\r\n    const temp = state.itemsArr.findIndex((x) => x.id === action.obj.id);\r\n\r\n    if (temp >= 0) {\r\n      state.itemsArr[temp].quantity++;\r\n      return {\r\n        ...state,\r\n        itemsArr: [...state.itemsArr],\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        itemsArr: [action.obj, ...state.itemsArr],\r\n      };\r\n    }\r\n  }\r\n\r\n  if (action.type === \"remove\") {\r\n    if (action.obj.quantity <= 1) {\r\n      return {\r\n        ...state,\r\n        itemsArr: [],\r\n      };\r\n    }\r\n\r\n    if (state.itemsArr.length === 0) {\r\n      return {\r\n        ...state,\r\n        itemsArr: [action.obj, ...state.itemsArr],\r\n      };\r\n    }\r\n    console.log(action.obj.quantity);\r\n    console.log(state.itemsArr.length);\r\n\r\n    const temp = state.itemsArr.findIndex((x) => x.id === action.obj.id);\r\n\r\n    if (temp >= 0) {\r\n      state.itemsArr[temp].quantity--;\r\n      return {\r\n        ...state,\r\n        itemsArr: [...state.itemsArr],\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        itemsArr: [action.obj, ...state.itemsArr],\r\n      };\r\n    }\r\n  }\r\n  // if (action.type === \"remove\") {\r\n  //   return {\r\n  //     // returning a copy of orignal state\r\n  //     ...state, //copying the original state\r\n  //     itemsArr: state.itemsArr.filter((e) => e.id !== action.payload),\r\n  //   };\r\n  // }\r\n\r\n  if (action.type === \"set\") {\r\n    return {\r\n      ...state,\r\n      filter: (state.filter = action.filterState),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"switchCurr\") {\r\n    return {\r\n      ...state,\r\n      currency: (state.currency = action.curr),\r\n    };\r\n  }\r\n\r\n  // case APPEND_TODO:\r\n  //  return { // returning a copy of orignal state\r\n  //   ...state, //copying the original state\r\n  //   todos: [...state.todos, action.payload] //new todos array\r\n  //  }\r\n\r\n  if (action.type === \"remove\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      itemsArr: state.itemsArr.push(action.obj),\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(Store);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}