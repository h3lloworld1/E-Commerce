{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  filter: 0,\n  itemsArr: [],\n  currency: 0,\n  quantity: 0\n};\n\nconst Store = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"add\") {\n    if (!action.obj.quantity) {\n      action.obj.quantity = 1;\n    }\n\n    if (state.itemsArr.length === 0) {\n      return { ...state,\n        itemsArr: [action.obj, ...state.itemsArr]\n      };\n    }\n\n    const temp = state.itemsArr.findIndex(x => x.id === action.obj.id);\n\n    if (temp >= 0) {\n      state.itemsArr[temp].quantity++;\n      return { ...state\n      };\n    } else {\n      return { ...state,\n        itemsArr: [action.obj, ...state.itemsArr]\n      };\n    }\n\n    return { ...state // itemsArr: [action.obj, ...state.itemsArr],\n      // const numb = array1.findIndex(x => x.id === '74'),\n      // array1[0].id = array1[0].id + 1,\n      // console.log(array1);\n      // console.log(numb);\n\n    };\n  }\n\n  if (action.type === \"clean\") {\n    return { // returning a copy of orignal state\n      ...state,\n      //copying the original state\n      itemsArr: state.itemsArr.filter(e => e.id !== action.payload)\n    };\n  }\n\n  if (action.type === \"set\") {\n    return { ...state,\n      filter: state.filter = action.filterState\n    };\n  }\n\n  if (action.type === \"switchCurr\") {\n    return { ...state,\n      currency: state.currency = action.curr\n    };\n  } // case APPEND_TODO:\n  //  return { // returning a copy of orignal state\n  //   ...state, //copying the original state\n  //   todos: [...state.todos, action.payload] //new todos array\n  //  }\n\n\n  if (action.type === \"remove\") {\n    return {\n      counter: state.counter - 1,\n      itemsArr: state.itemsArr.push(action.obj)\n    };\n  }\n\n  return state;\n};\n\n_c = Store;\nconst store = createStore(Store);\nexport default store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["D:/scandiweb/src/components/store/index.js"],"names":["createStore","initialState","filter","itemsArr","currency","quantity","Store","state","action","type","obj","length","temp","findIndex","x","id","e","payload","filterState","curr","counter","push","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE,CADW;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,QAAQ,EAAE,CAHS;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;;AAOA,MAAMC,KAAK,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAC9C,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,QAAI,CAACD,MAAM,CAACE,GAAP,CAAWL,QAAhB,EAA0B;AACxBG,MAAAA,MAAM,CAACE,GAAP,CAAWL,QAAX,GAAsB,CAAtB;AACD;;AACD,QAAIE,KAAK,CAACJ,QAAN,CAAeQ,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,QAAQ,EAAE,CAACK,MAAM,CAACE,GAAR,EAAa,GAAGH,KAAK,CAACJ,QAAtB;AAFL,OAAP;AAID;;AAED,UAAMS,IAAI,GAAGL,KAAK,CAACJ,QAAN,CAAeU,SAAf,CAA0BC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASP,MAAM,CAACE,GAAP,CAAWK,EAApD,CAAb;;AAEA,QAAIH,IAAI,IAAI,CAAZ,EAAe;AACbL,MAAAA,KAAK,CAACJ,QAAN,CAAeS,IAAf,EAAqBP,QAArB;AACA,aAAO,EACL,GAAGE;AADE,OAAP;AAGD,KALD,MAKO;AACL,aAAO,EACL,GAAGA,KADE;AAELJ,QAAAA,QAAQ,EAAE,CAACK,MAAM,CAACE,GAAR,EAAa,GAAGH,KAAK,CAACJ,QAAtB;AAFL,OAAP;AAID;;AAED,WAAO,EACL,GAAGI,KADE,CAEL;AAEA;AAEA;AAEA;AACA;;AATK,KAAP;AAWD;;AACD,MAAIC,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC3B,WAAO,EACL;AACA,SAAGF,KAFE;AAEK;AACVJ,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeD,MAAf,CAAuBc,CAAD,IAAOA,CAAC,CAACD,EAAF,KAASP,MAAM,CAACS,OAA7C;AAHL,KAAP;AAKD;;AAED,MAAIT,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,WAAO,EACL,GAAGF,KADE;AAELL,MAAAA,MAAM,EAAGK,KAAK,CAACL,MAAN,GAAeM,MAAM,CAACU;AAF1B,KAAP;AAID;;AAED,MAAIV,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO,EACL,GAAGF,KADE;AAELH,MAAAA,QAAQ,EAAGG,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACW;AAF9B,KAAP;AAID,GA1D6C,CA4D9C;AACA;AACA;AACA;AACA;;;AAEA,MAAIX,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACLW,MAAAA,OAAO,EAAEb,KAAK,CAACa,OAAN,GAAgB,CADpB;AAELjB,MAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAekB,IAAf,CAAoBb,MAAM,CAACE,GAA3B;AAFL,KAAP;AAID;;AAED,SAAOH,KAAP;AACD,CA1ED;;KAAMD,K;AA4EN,MAAMgB,KAAK,GAAGtB,WAAW,CAACM,KAAD,CAAzB;AAEA,eAAegB,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  filter: 0,\r\n  itemsArr: [],\r\n  currency: 0,\r\n  quantity: 0,\r\n};\r\n\r\nconst Store = (state = initialState, action) => {\r\n  if (action.type === \"add\") {\r\n    if (!action.obj.quantity) {\r\n      action.obj.quantity = 1;\r\n    }\r\n    if (state.itemsArr.length === 0) {\r\n      return {\r\n        ...state,\r\n        itemsArr: [action.obj, ...state.itemsArr],\r\n      };\r\n    }\r\n\r\n    const temp = state.itemsArr.findIndex((x) => x.id === action.obj.id);\r\n\r\n    if (temp >= 0) {\r\n      state.itemsArr[temp].quantity++;\r\n      return {\r\n        ...state,\r\n      };\r\n    } else {\r\n      return {\r\n        ...state,\r\n        itemsArr: [action.obj, ...state.itemsArr],\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...state,\r\n      // itemsArr: [action.obj, ...state.itemsArr],\r\n\r\n      // const numb = array1.findIndex(x => x.id === '74'),\r\n\r\n      // array1[0].id = array1[0].id + 1,\r\n\r\n      // console.log(array1);\r\n      // console.log(numb);\r\n    };\r\n  }\r\n  if (action.type === \"clean\") {\r\n    return {\r\n      // returning a copy of orignal state\r\n      ...state, //copying the original state\r\n      itemsArr: state.itemsArr.filter((e) => e.id !== action.payload),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"set\") {\r\n    return {\r\n      ...state,\r\n      filter: (state.filter = action.filterState),\r\n    };\r\n  }\r\n\r\n  if (action.type === \"switchCurr\") {\r\n    return {\r\n      ...state,\r\n      currency: (state.currency = action.curr),\r\n    };\r\n  }\r\n\r\n  // case APPEND_TODO:\r\n  //  return { // returning a copy of orignal state\r\n  //   ...state, //copying the original state\r\n  //   todos: [...state.todos, action.payload] //new todos array\r\n  //  }\r\n\r\n  if (action.type === \"remove\") {\r\n    return {\r\n      counter: state.counter - 1,\r\n      itemsArr: state.itemsArr.push(action.obj),\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(Store);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}