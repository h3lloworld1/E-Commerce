{"ast":null,"code":"var _jsxFileName = \"D:\\\\scandiweb\\\\src\\\\Pages\\\\Cart.js\";\nimport { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Slider from \"../components/Slider/Slider\";\nimport classes from \"./Cart.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemQuantity: 0,\n      totalPrice: 0\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.itemsArr !== this.props.itemsArr) {\n      this.setState({\n        itemQuantity: this.props.itemsArr.reduce((acummulator, object) => {\n          return acummulator + object.quantity;\n        }, 0)\n      });\n    }\n\n    if (prevProps.itemsArr !== this.props.itemsArr) {\n      this.setState({\n        totalPrice: this.props.itemsArr.reduce((acummulator, total) => {\n          return acummulator + total.prices[this.props.currency].amount * total.quantity;\n        }, 0)\n      });\n    }\n  }\n\n  render() {\n    const {\n      itemsArr,\n      currency,\n      addToCart,\n      removeItem,\n      opacity\n    } = this.props;\n    const {\n      totalPrice,\n      itemQuantity\n    } = this.state;\n\n    if (itemsArr.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cart__empty,\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        opacity: opacity === true && \"0.5\"\n      },\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.cart__text,\n        children: \"CART\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), itemsArr.length !== 0 && itemsArr.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.left,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.item__brand,\n            children: item.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.item__name,\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.item__price,\n            children: [item.prices[currency].currency.symbol, parseFloat(item.quantity * item.prices[currency].amount).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.attribute__container,\n            children: item.checked.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.attribute__name,\n                children: Object.keys(item)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.attribute__option,\n                children: [Object.keys(item).includes(\"Size\") && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: classes.size__square,\n                  children: Object.values(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 27\n                }, this), Object.keys(item).includes(\"Color\") ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.color__square,\n                  style: {\n                    color: Object.values(item),\n                    backgroundColor: Object.values(item)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: !Object.keys(item).includes(\"Size\") && Object.values(item)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.right,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.quantity__buttons,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: classes.plus__minus,\n              onClick: () => addToCart(item),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.quantity,\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: classes.plus__minus,\n              onClick: () => removeItem(item),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {\n            slides: item.gallery\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total__container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Tax:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Qty: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.total__values,\n            children: itemQuantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.total__text,\n          children: [\"Total:\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.total__values,\n            children: [itemsArr[0].prices[currency].currency.symbol, parseFloat(totalPrice).toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.order__button,\n          children: \"ORDER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itemsArr: state.itemsArr,\n    currency: state.currency,\n    opacity: state.opacity\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: val => dispatch({\n      type: \"add\",\n      obj: val\n    }),\n    removeItem: val => dispatch({\n      type: \"remove\",\n      obj: val\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["D:/scandiweb/src/Pages/Cart.js"],"names":["Component","connect","Slider","classes","Cart","constructor","props","state","itemQuantity","totalPrice","componentDidUpdate","prevProps","itemsArr","setState","reduce","acummulator","object","quantity","total","prices","currency","amount","render","addToCart","removeItem","opacity","length","cart__empty","container","cart__text","map","item","wrapper","left","item__brand","brand","item__name","name","item__price","symbol","parseFloat","toFixed","attribute__container","checked","i","attribute__name","Object","keys","attribute__option","includes","size__square","values","color__square","color","backgroundColor","right","quantity__buttons","plus__minus","gallery","id","total__container","total__values","total__text","order__button","mapStateToProps","mapDispatchToProps","dispatch","val","type","obj"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Slider from \"../components/Slider/Slider\";\r\nimport classes from \"./Cart.module.css\";\r\n\r\nclass Cart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      itemQuantity: 0,\r\n      totalPrice: 0,\r\n    };\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.itemsArr !== this.props.itemsArr) {\r\n      this.setState({\r\n        itemQuantity: this.props.itemsArr.reduce((acummulator, object) => {\r\n          return acummulator + object.quantity;\r\n        }, 0),\r\n      });\r\n    }\r\n\r\n    if (prevProps.itemsArr !== this.props.itemsArr) {\r\n      this.setState({\r\n        totalPrice: this.props.itemsArr.reduce((acummulator, total) => {\r\n          return (\r\n            acummulator +\r\n            total.prices[this.props.currency].amount * total.quantity\r\n          );\r\n        }, 0),\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { itemsArr, currency, addToCart, removeItem, opacity } = this.props;\r\n    const { totalPrice, itemQuantity } = this.state;\r\n\r\n    if (itemsArr.length === 0) {\r\n      return <div className={classes.cart__empty}>Your cart is empty</div>;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        style={{ opacity: opacity === true && \"0.5\" }}\r\n        className={classes.container}\r\n      >\r\n        <div className={classes.cart__text}>CART</div>\r\n        {itemsArr.length !== 0 &&\r\n          itemsArr.map((item) => (\r\n            <div className={classes.wrapper} key={item.id}>\r\n              <div className={classes.left}>\r\n                <div className={classes.item__brand}>{item.brand}</div>\r\n                <div className={classes.item__name}>{item.name}</div>\r\n                <div className={classes.item__price}>\r\n                  {item.prices[currency].currency.symbol}\r\n                  {parseFloat(\r\n                    item.quantity * item.prices[currency].amount\r\n                  ).toFixed(2)}\r\n                </div>\r\n                <div className={classes.attribute__container}>\r\n                  {item.checked.map((item, i) => (\r\n                    <div key={i}>\r\n                      <p className={classes.attribute__name}>\r\n                        {Object.keys(item)}\r\n                      </p>\r\n                      <div className={classes.attribute__option}>\r\n                        {Object.keys(item).includes(\"Size\") && (\r\n                          <button className={classes.size__square}>\r\n                            {Object.values(item)}\r\n                          </button>\r\n                        )}\r\n                        {Object.keys(item).includes(\"Color\") ? (\r\n                          <div\r\n                            className={classes.color__square}\r\n                            style={{\r\n                              color: Object.values(item),\r\n                              backgroundColor: Object.values(item),\r\n                            }}\r\n                          ></div>\r\n                        ) : (\r\n                          <p>\r\n                            {!Object.keys(item).includes(\"Size\") &&\r\n                              Object.values(item)}\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className={classes.right}>\r\n                <div className={classes.quantity__buttons}>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={classes.plus__minus}\r\n                    onClick={() => addToCart(item)}\r\n                  >\r\n                    +\r\n                  </button>\r\n                  <div className={classes.quantity}>{item.quantity}</div>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className={classes.plus__minus}\r\n                    onClick={() => removeItem(item)}\r\n                  >\r\n                    -\r\n                  </button>\r\n                </div>\r\n                <Slider slides={item.gallery} />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        <div className={classes.total__container}>\r\n          <div>Tax:</div>\r\n          <div>\r\n            Qty: <span className={classes.total__values}>{itemQuantity}</span>\r\n          </div>\r\n          <div className={classes.total__text}>\r\n            Total:\r\n            <span className={classes.total__values}>\r\n              {itemsArr[0].prices[currency].currency.symbol}\r\n              {parseFloat(totalPrice).toFixed(2)}\r\n            </span>\r\n          </div>\r\n          <button className={classes.order__button}>ORDER</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    itemsArr: state.itemsArr,\r\n    currency: state.currency,\r\n    opacity: state.opacity,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (val) => dispatch({ type: \"add\", obj: val }),\r\n    removeItem: (val) => dispatch({ type: \"remove\", obj: val }),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n"]},"metadata":{},"sourceType":"module"}