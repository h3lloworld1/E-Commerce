{"ast":null,"code":"import { createStore } from \"redux\";\nconst initialState = {\n  counter: 0,\n  itemsArr: []\n};\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"add\") {\n    console.log(state.itemsArr);\n    return { ...state,\n      itemsArr: [action.obj, ...state.itemsArr]\n    };\n  } // case APPEND_TODO:\n  //  return { // returning a copy of orignal state\n  //   ...state, //copying the original state\n  //   todos: [...state.todos, action.payload] //new todos array\n  //  }\n\n\n  if (action.type === \"remove\") {\n    console.log(action.obj);\n    return {\n      counter: state.counter - 1,\n      itemsArr: state.itemsArr.push(action.obj)\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["D:/scandiweb/src/components/store/index.js"],"names":["createStore","initialState","counter","itemsArr","counterReducer","state","action","type","console","log","obj","push","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,CADU;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB;;AAKA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBJ,YAAyB;AAAA,MAAXK,MAAW;;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACF,QAAlB;AACA,WAAO,EACL,GAAGE,KADE;AAELF,MAAAA,QAAQ,EAAE,CAACG,MAAM,CAACI,GAAR,EAAa,GAAGL,KAAK,CAACF,QAAtB;AAFL,KAAP;AAID,GAPsD,CASvD;AACA;AACA;AACA;AACA;;;AAEA,MAAIG,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,GAAnB;AAEA,WAAO;AACLR,MAAAA,OAAO,EAAEG,KAAK,CAACH,OAAN,GAAgB,CADpB;AAELC,MAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeQ,IAAf,CAAoBL,MAAM,CAACI,GAA3B;AAFL,KAAP;AAID;;AAED,SAAOL,KAAP;AACD,CAzBD;;AA2BA,MAAMO,KAAK,GAAGZ,WAAW,CAACI,cAAD,CAAzB;AAEA,eAAeQ,KAAf","sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst initialState = {\r\n  counter: 0,\r\n  itemsArr: [],\r\n};\r\n\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === \"add\") {\r\n    console.log(state.itemsArr);\r\n    return {\r\n      ...state,\r\n      itemsArr: [action.obj, ...state.itemsArr],\r\n    };\r\n  }\r\n\r\n  // case APPEND_TODO:\r\n  //  return { // returning a copy of orignal state\r\n  //   ...state, //copying the original state\r\n  //   todos: [...state.todos, action.payload] //new todos array\r\n  //  }\r\n\r\n  if (action.type === \"remove\") {\r\n    console.log(action.obj);\r\n\r\n    return {\r\n      counter: state.counter - 1,\r\n      itemsArr: state.itemsArr.push(action.obj),\r\n    };\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}