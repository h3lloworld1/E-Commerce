{"ast":null,"code":"var _jsxFileName = \"D:\\\\scandiweb\\\\src\\\\components\\\\Products.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { arr } from \"../Data\";\nimport Product from \"./Product\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n_c = Container;\nconst productsQuerry = `\n{\n  categories {\n    name\n    products {\n      name\n      id\n      inStock\n      gallery\n      description\n      category\n      attributes {\n        id\n        name\n        type\n      }\n      prices {\n        currency {\n          label\n        }\n        amount\n      }\n      brand\n    }\n  }\n}\n`; // curl 'http://localhost:4000/' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{\"query\":\"# Write your query or mutation here\\n{\\n  categories {\\n    name\\n    products {\\n      name\\n      id\\n      inStock\\n      gallery\\n      description\\n      category\\n      attributes {\\n        id\\n        name\\n        type\\n      }\\n      prices {\\n        currency {\\n          label\\n        }\\n        amount\\n      }\\n      brand\\n    }\\n  }\\n}\\n\"}' --compressed\n\nconst Products = () => {\n  _s();\n\n  const filter = useSelector(state => state.filter);\n  const [productList, setProductList] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:4000/\", {\n      body: JSON.stringify({\n        query: productsQuerry\n      }),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        Dnt: \"1\"\n      },\n      method: \"POST\"\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setProductList(data.data.categories[filter].products);\n    });\n  }, [filter]);\n  console.log(productList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: productList.map(item => /*#__PURE__*/_jsxDEV(Product, {\n        item: item\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Products, \"xq00RbZbsHnGQcE6IHj6UdMB/QA=\", false, function () {\n  return [useSelector];\n});\n\n_c2 = Products;\nexport default Products;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Products\");","map":{"version":3,"sources":["D:/scandiweb/src/components/Products.js"],"names":["React","styled","arr","Product","useEffect","useState","useSelector","useDispatch","Container","div","productsQuerry","Products","filter","state","productList","setProductList","fetch","body","JSON","stringify","query","headers","Accept","Dnt","method","then","response","json","data","console","log","categories","products","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAI;AAC7B;AACA;AACA;AACA,CAJA;KAAMD,S;AAMN,MAAME,cAAc,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1BA,C,CA2BA;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,MAAM,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAAC,wBAAD,EAA2B;AAC9BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAEV;AAAT,OAAf,CADwB;AAE9BW,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB,kBAFT;AAGPC,QAAAA,GAAG,EAAE;AAHE,OAFqB;AAO9BC,MAAAA,MAAM,EAAE;AAPsB,KAA3B,CAAL,CASGC,IATH,CASSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EATtB,EAUGF,IAVH,CAUSG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAb,MAAAA,cAAc,CAACa,IAAI,CAACA,IAAL,CAAUG,UAAV,CAAqBnB,MAArB,EAA6BoB,QAA9B,CAAd;AACD,KAbH;AAcD,GAfQ,EAeN,CAACpB,MAAD,CAfM,CAAT;AAgBAiB,EAAAA,OAAO,CAACC,GAAR,CAAYhB,WAAZ;AAEA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,gBACGA,WAAW,CAACmB,GAAZ,CAAiBC,IAAD,iBACf,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEA;AAAf,SAA0BA,IAAI,CAACC,EAA/B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9BD;;GAAMxB,Q;UACWL,W;;;MADXK,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { arr } from \"../Data\";\r\nimport Product from \"./Product\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst productsQuerry = `\r\n{\r\n  categories {\r\n    name\r\n    products {\r\n      name\r\n      id\r\n      inStock\r\n      gallery\r\n      description\r\n      category\r\n      attributes {\r\n        id\r\n        name\r\n        type\r\n      }\r\n      prices {\r\n        currency {\r\n          label\r\n        }\r\n        amount\r\n      }\r\n      brand\r\n    }\r\n  }\r\n}\r\n`;\r\n// curl 'http://localhost:4000/' -H 'Accept-Encoding: gzip, deflate, br' -H 'Content-Type: application/json' -H 'Accept: application/json' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Origin: http://localhost:4000' --data-binary '{\"query\":\"# Write your query or mutation here\\n{\\n  categories {\\n    name\\n    products {\\n      name\\n      id\\n      inStock\\n      gallery\\n      description\\n      category\\n      attributes {\\n        id\\n        name\\n        type\\n      }\\n      prices {\\n        currency {\\n          label\\n        }\\n        amount\\n      }\\n      brand\\n    }\\n  }\\n}\\n\"}' --compressed\r\nconst Products = () => {\r\n  const filter = useSelector((state) => state.filter);\r\n  const [productList, setProductList] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:4000/\", {\r\n      body: JSON.stringify({ query: productsQuerry }),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Dnt: \"1\",\r\n      },\r\n      method: \"POST\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setProductList(data.data.categories[filter].products);\r\n      });\r\n  }, [filter]);\r\n  console.log(productList);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        {productList.map((item) => (\r\n          <Product item={item} key={item.id} />\r\n        ))}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n"]},"metadata":{},"sourceType":"module"}